@c DO NOT EDIT!  Generated automatically by genpropdoc.m.

@c Copyright (C) 2014-2018 Pantxo Diribarne
@c
@c This file is part of Octave.
@c
@c Octave is free software: you can redistribute it and/or modify it
@c under the terms of the GNU General Public License as published by
@c the Free Software Foundation, either version 3 of the License, or
@c (at your option) any later version.
@c
@c Octave is distributed in the hope that it will be useful, but
@c WITHOUT ANY WARRANTY; without even the implied warranty of
@c MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
@c GNU General Public License for more details.
@c
@c You should have received a copy of the GNU General Public License
@c along with Octave; see the file COPYING.  If not, see
@c <https://www.gnu.org/licenses/>.

@table @asis

@anchor{XREFsurfacealphadata}
@prindex surface alphadata
@item @code{alphadata}: scalar | matrix, def. @code{1}
Transparency is not yet implemented for surface objects.  @code{alphadata} is unused.


@anchor{XREFsurfacealphadatamapping}
@prindex surface alphadatamapping
@item @code{alphadatamapping}: @qcode{"direct"} | @qcode{"none"} | @{@qcode{"scaled"}@}
Transparency is not yet implemented for surface objects.  @code{alphadatamapping} is unused.


@anchor{XREFsurfaceambientstrength}
@prindex surface ambientstrength
@item @code{ambientstrength}: scalar, def. @code{0.30000}
Strength of the ambient light. Value between 0.0 and 1.0


@anchor{XREFsurfacebackfacelighting}
@prindex surface backfacelighting
@item @code{backfacelighting}: @qcode{"lit"} | @{@qcode{"reverselit"}@} | @qcode{"unlit"}
@qcode{"lit"}: The normals are used as is for lighting. @qcode{"reverselit"}: The normals are always oriented towards the point of view. @qcode{"unlit"}: Faces with normals pointing away from the point of view are unlit.


@anchor{XREFsurfacebeingdeleted}
@prindex surface beingdeleted
@item @code{beingdeleted}: @{@qcode{"off"}@} | @qcode{"on"}



@anchor{XREFsurfacebusyaction}
@prindex surface busyaction
@item @code{busyaction}: @qcode{"cancel"} | @{@qcode{"queue"}@}
Define how Octave handles the execution of this object's callback properties when it is unable to interrupt another object's executing callback.  This is only relevant when the currently executing callback object has its @code{interruptible} property set to @qcode{"off"}.  The @code{busyaction} property of the interrupting callback object indicates whether the interrupting callback is queued (@qcode{"queue"} (default)) or discarded (@qcode{"cancel"}).
@xref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFsurfacebuttondownfcn}
@prindex surface buttondownfcn
@item @code{buttondownfcn}: string | function handle, def. @code{[](0x0)}
For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFsurfacecdata}
@prindex surface cdata
@item @code{cdata}: matrix, def. 3-by-3 double



@anchor{XREFsurfacecdatamapping}
@prindex surface cdatamapping
@item @code{cdatamapping}: @qcode{"direct"} | @{@qcode{"scaled"}@}



@anchor{XREFsurfacecdatasource}
@prindex surface cdatasource
@item @code{cdatasource}: def. @qcode{""}



@anchor{XREFsurfacechildren}
@prindex surface children
@item @code{children} (read-only): vector of graphics handles, def. @code{[](0x1)}
@code{children} is unused.


@anchor{XREFsurfaceclipping}
@prindex surface clipping
@item @code{clipping}: @qcode{"off"} | @{@qcode{"on"}@}
If @code{clipping} is @qcode{"on"}, the surface is clipped in its parent axes limits.


@anchor{XREFsurfacecreatefcn}
@prindex surface createfcn
@item @code{createfcn}: string | function handle, def. @code{[](0x0)}
Callback function executed immediately after surface has been created.  Function is set by using default property on root object, e.g., @code{set (groot, "defaultsurfacecreatefcn", 'disp ("surface created!")')}.

For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFsurfacedeletefcn}
@prindex surface deletefcn
@item @code{deletefcn}: string | function handle, def. @code{[](0x0)}
Callback function executed immediately before surface is deleted.

For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFsurfacediffusestrength}
@prindex surface diffusestrength
@item @code{diffusestrength}: scalar, def. @code{0.60000}
Strength of the diffuse reflex. Value between 0.0 (no diffuse reflex) and 1.0 (full diffuse reflex).


@anchor{XREFsurfacedisplayname}
@prindex surface displayname
@item @code{displayname}: def. @qcode{""}
Text for the legend entry corresponding to this surface.


@anchor{XREFsurfaceedgealpha}
@prindex surface edgealpha
@item @code{edgealpha}: scalar, def. @code{1}
Transparency is not yet implemented for surface objects.  @code{edgealpha} is unused.


@anchor{XREFsurfaceedgecolor}
@prindex surface edgecolor
@item @code{edgecolor}: def. @code{[0   0   0]}



@anchor{XREFsurfaceedgelighting}
@prindex surface edgelighting
@item @code{edgelighting}: @qcode{"flat"} | @qcode{"gouraud"} | @{@qcode{"none"}@} | @qcode{"phong"}
When set to a value other than @qcode{"none"}, the edges of the object are drawn with light and shadow effects.  Supported values are @qcode{"none"} (no lighting effects), @qcode{"flat"} (facetted look) and @qcode{"gouraud"} (linear interpolation of the lighting effects between the vertices). @qcode{"phong"} is deprecated and has the same effect as @qcode{"gouraud"}.


@anchor{XREFsurfacefacealpha}
@prindex surface facealpha
@item @code{facealpha}: scalar | @qcode{"flat"} | @qcode{"interp"} | @qcode{"texturemap"}, def. @code{1}
Transparency level of the faces of the surface object.  Only double values are supported at present where a value of 0 means complete transparency and a value of 1 means solid faces without transparency.  Setting the property to @qcode{"flat"}, @qcode{"interp"} or @qcode{"texturemap"} causes the faces to not being rendered.  Additionally, the faces are not sorted from back to front which might lead to unexpected results when rendering layered transparent faces.


@anchor{XREFsurfacefacecolor}
@prindex surface facecolor
@item @code{facecolor}: @{@qcode{"flat"}@} | @qcode{"interp"} | @qcode{"none"} | @qcode{"texturemap"}



@anchor{XREFsurfacefacelighting}
@prindex surface facelighting
@item @code{facelighting}: @{@qcode{"flat"}@} | @qcode{"gouraud"} | @qcode{"none"} | @qcode{"phong"}
When set to a value other than @qcode{"none"}, the faces of the object are drawn with light and shadow effects.  Supported values are @qcode{"none"} (no lighting effects), @qcode{"flat"} (facetted look) and @qcode{"gouraud"} (linear interpolation of the lighting effects between the vertices). @qcode{"phong"} is deprecated and has the same effect as @qcode{"gouraud"}.


@anchor{XREFsurfacefacenormals}
@prindex surface facenormals
@item @code{facenormals}: def. @code{[](0x0)}



@anchor{XREFsurfacefacenormalsmode}
@prindex surface facenormalsmode
@item @code{facenormalsmode}: @{@qcode{"auto"}@} | @qcode{"manual"}



@anchor{XREFsurfacehandlevisibility}
@prindex surface handlevisibility
@item @code{handlevisibility}: @qcode{"callback"} | @qcode{"off"} | @{@qcode{"on"}@}
If @code{handlevisibility} is @qcode{"off"}, the surface's handle is not visible in its parent's "children" property.


@anchor{XREFsurfacehittest}
@prindex surface hittest
@item @code{hittest}: @qcode{"off"} | @{@qcode{"on"}@}
Specify whether surface processes mouse events or passes them to ancestors of the object.  When enabled, the object may respond to mouse clicks by evaluating the @qcode{"buttondownfcn"}, showing the uicontextmenu, and eventually becoming the root @qcode{"currentobject"}.  This property is only relevant when the object can accept mouse clicks which is determined by the @qcode{"pickableparts"} property.  @xref{XREFsurfacepickableparts, , @w{pickableparts property}}.


@anchor{XREFsurfaceinterruptible}
@prindex surface interruptible
@item @code{interruptible}: @qcode{"off"} | @{@qcode{"on"}@}
Specify whether this object's callback functions may be interrupted by other callbacks.  By default @code{interruptible} is @qcode{"on"} and callbacks that make use of @code{drawnow}, @code{figure}, @code{waitfor}, @code{getframe} or @code{pause} functions are eventually interrupted.
@xref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFsurfacelinestyle}
@prindex surface linestyle
@item @code{linestyle}: @{@qcode{"-"}@} | @qcode{"--"} | @qcode{"-."} | @qcode{":"} | @qcode{"none"}
@xref{Line Styles}.


@anchor{XREFsurfacelinewidth}
@prindex surface linewidth
@item @code{linewidth}: def. @code{0.50000}
@xref{XREFlinelinewidth, , @w{line linewidth property}}.


@anchor{XREFsurfacemarker}
@prindex surface marker
@item @code{marker}: @qcode{"*"} | @qcode{"+"} | @qcode{"."} | @qcode{"<"} | @qcode{">"} | @qcode{"^"} | @qcode{"d"} | @qcode{"diamond"} | @qcode{"h"} | @qcode{"hexagram"} | @{@qcode{"none"}@} | @qcode{"o"} | @qcode{"p"} | @qcode{"pentagram"} | @qcode{"s"} | @qcode{"square"} | @qcode{"v"} | @qcode{"x"}
@xref{Marker Styles}.


@anchor{XREFsurfacemarkeredgecolor}
@prindex surface markeredgecolor
@item @code{markeredgecolor}: @{@qcode{"auto"}@} | @qcode{"flat"} | @qcode{"none"}
@xref{XREFlinemarkeredgecolor, , @w{line markeredgecolor property}}.


@anchor{XREFsurfacemarkerfacecolor}
@prindex surface markerfacecolor
@item @code{markerfacecolor}: @qcode{"auto"} | @qcode{"flat"} | @{@qcode{"none"}@}
@xref{XREFlinemarkerfacecolor, , @w{line markerfacecolor property}}.


@anchor{XREFsurfacemarkersize}
@prindex surface markersize
@item @code{markersize}: scalar, def. @code{6}
@xref{XREFlinemarkersize, , @w{line markersize property}}.


@anchor{XREFsurfacemeshstyle}
@prindex surface meshstyle
@item @code{meshstyle}: @{@qcode{"both"}@} | @qcode{"column"} | @qcode{"row"}



@anchor{XREFsurfaceparent}
@prindex surface parent
@item @code{parent}: graphics handle
Handle of the parent graphics object.


@anchor{XREFsurfacepickableparts}
@prindex surface pickableparts
@item @code{pickableparts}: @qcode{"all"} | @qcode{"none"} | @{@qcode{"visible"}@}
Specify whether surface will accept mouse clicks.  By default, @code{pickableparts} is @qcode{"visible"} and only visible parts of the surface or its children may react to mouse clicks.  When @code{pickableparts} is @qcode{"all"} both visible and invisible parts (or children) may react to mouse clicks.  When @code{pickableparts} is @qcode{"none"} mouse clicks on the object are ignored and transmitted to any objects underneath this one.  When an object is configured to accept mouse clicks the @qcode{"hittest"} property will determine how they are processed.  @xref{XREFsurfacehittest, , @w{hittest property}}.


@anchor{XREFsurfaceselected}
@prindex surface selected
@item @code{selected}: @{@qcode{"off"}@} | @qcode{"on"}



@anchor{XREFsurfaceselectionhighlight}
@prindex surface selectionhighlight
@item @code{selectionhighlight}: @qcode{"off"} | @{@qcode{"on"}@}



@anchor{XREFsurfacespecularcolorreflectance}
@prindex surface specularcolorreflectance
@item @code{specularcolorreflectance}: scalar, def. @code{1}
Reflectance for specular color. Value between 0.0 (color of underlying face) and 1.0 (color of light source).


@anchor{XREFsurfacespecularexponent}
@prindex surface specularexponent
@item @code{specularexponent}: scalar, def. @code{10}
Exponent for the specular reflex. The lower the value, the more the reflex is spread out.


@anchor{XREFsurfacespecularstrength}
@prindex surface specularstrength
@item @code{specularstrength}: scalar, def. @code{0.90000}
Strength of the specular reflex. Value between 0.0 (no specular reflex) and 1.0 (full specular reflex).


@anchor{XREFsurfacetag}
@prindex surface tag
@item @code{tag}: string, def. @qcode{""}
A user-defined string to label the graphics object.


@anchor{XREFsurfacetype}
@prindex surface type
@item @code{type} (read-only): string
Class name of the graphics object.  @code{type} is always @qcode{"surface"}


@anchor{XREFsurfaceuicontextmenu}
@prindex surface uicontextmenu
@item @code{uicontextmenu}: graphics handle, def. @code{[](0x0)}
Graphics handle of the uicontextmenu object that is currently associated to this surface object.


@anchor{XREFsurfaceuserdata}
@prindex surface userdata
@item @code{userdata}: Any Octave data, def. @code{[](0x0)}
User-defined data to associate with the graphics object.


@anchor{XREFsurfacevertexnormals}
@prindex surface vertexnormals
@item @code{vertexnormals}: def. 3-by-3-by-3 double



@anchor{XREFsurfacevertexnormalsmode}
@prindex surface vertexnormalsmode
@item @code{vertexnormalsmode}: @{@qcode{"auto"}@} | @qcode{"manual"}



@anchor{XREFsurfacevisible}
@prindex surface visible
@item @code{visible}: @qcode{"off"} | @{@qcode{"on"}@}
If @code{visible} is @qcode{"off"}, the surface is not rendered on screen.


@anchor{XREFsurfacexdata}
@prindex surface xdata
@item @code{xdata}: matrix, def. @code{[1   2   3]}



@anchor{XREFsurfacexdatasource}
@prindex surface xdatasource
@item @code{xdatasource}: def. @qcode{""}



@anchor{XREFsurfaceydata}
@prindex surface ydata
@item @code{ydata}: matrix, def. @code{[1;    2;    3]}



@anchor{XREFsurfaceydatasource}
@prindex surface ydatasource
@item @code{ydatasource}: def. @qcode{""}



@anchor{XREFsurfacezdata}
@prindex surface zdata
@item @code{zdata}: matrix, def. 3-by-3 double



@anchor{XREFsurfacezdatasource}
@prindex surface zdatasource
@item @code{zdatasource}: def. @qcode{""}


@end table