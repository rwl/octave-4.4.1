@c DO NOT EDIT!  Generated automatically by genpropdoc.m.

@c Copyright (C) 2014-2018 Pantxo Diribarne
@c
@c This file is part of Octave.
@c
@c Octave is free software: you can redistribute it and/or modify it
@c under the terms of the GNU General Public License as published by
@c the Free Software Foundation, either version 3 of the License, or
@c (at your option) any later version.
@c
@c Octave is distributed in the hope that it will be useful, but
@c WITHOUT ANY WARRANTY; without even the implied warranty of
@c MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
@c GNU General Public License for more details.
@c
@c You should have received a copy of the GNU General Public License
@c along with Octave; see the file COPYING.  If not, see
@c <https://www.gnu.org/licenses/>.

@table @asis

@anchor{XREFlinebeingdeleted}
@prindex line beingdeleted
@item @code{beingdeleted}: @{@qcode{"off"}@} | @qcode{"on"}



@anchor{XREFlinebusyaction}
@prindex line busyaction
@item @code{busyaction}: @qcode{"cancel"} | @{@qcode{"queue"}@}
Define how Octave handles the execution of this object's callback properties when it is unable to interrupt another object's executing callback.  This is only relevant when the currently executing callback object has its @code{interruptible} property set to @qcode{"off"}.  The @code{busyaction} property of the interrupting callback object indicates whether the interrupting callback is queued (@qcode{"queue"} (default)) or discarded (@qcode{"cancel"}).
@xref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFlinebuttondownfcn}
@prindex line buttondownfcn
@item @code{buttondownfcn}: string | function handle, def. @code{[](0x0)}
For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFlinechildren}
@prindex line children
@item @code{children} (read-only): vector of graphics handles, def. @code{[](0x1)}
@code{children} is unused.


@anchor{XREFlineclipping}
@prindex line clipping
@item @code{clipping}: @qcode{"off"} | @{@qcode{"on"}@}
If @code{clipping} is @qcode{"on"}, the line is clipped in its parent axes limits.


@anchor{XREFlinecolor}
@prindex line color
@item @code{color}: colorspec, def. @code{[0   0   0]}
Color of the line object.  @xref{Colors, , colorspec}.


@anchor{XREFlinecreatefcn}
@prindex line createfcn
@item @code{createfcn}: string | function handle, def. @code{[](0x0)}
Callback function executed immediately after line has been created.  Function is set by using default property on root object, e.g., @code{set (groot, "defaultlinecreatefcn", 'disp ("line created!")')}.

For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFlinedeletefcn}
@prindex line deletefcn
@item @code{deletefcn}: string | function handle, def. @code{[](0x0)}
Callback function executed immediately before line is deleted.

For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFlinedisplayname}
@prindex line displayname
@item @code{displayname}: string | cell array of strings, def. @qcode{""}
Text for the legend entry corresponding to this line.


@anchor{XREFlinehandlevisibility}
@prindex line handlevisibility
@item @code{handlevisibility}: @qcode{"callback"} | @qcode{"off"} | @{@qcode{"on"}@}
If @code{handlevisibility} is @qcode{"off"}, the line's handle is not visible in its parent's "children" property.


@anchor{XREFlinehittest}
@prindex line hittest
@item @code{hittest}: @qcode{"off"} | @{@qcode{"on"}@}
Specify whether line processes mouse events or passes them to ancestors of the object.  When enabled, the object may respond to mouse clicks by evaluating the @qcode{"buttondownfcn"}, showing the uicontextmenu, and eventually becoming the root @qcode{"currentobject"}.  This property is only relevant when the object can accept mouse clicks which is determined by the @qcode{"pickableparts"} property.  @xref{XREFlinepickableparts, , @w{pickableparts property}}.


@anchor{XREFlineinterruptible}
@prindex line interruptible
@item @code{interruptible}: @qcode{"off"} | @{@qcode{"on"}@}
Specify whether this object's callback functions may be interrupted by other callbacks.  By default @code{interruptible} is @qcode{"on"} and callbacks that make use of @code{drawnow}, @code{figure}, @code{waitfor}, @code{getframe} or @code{pause} functions are eventually interrupted.
@xref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFlinelinejoin}
@prindex line linejoin
@item @code{linejoin}: @qcode{"chamfer"} | @qcode{"miter"} | @{@qcode{"round"}@}
Control the shape of the junction of line segments. This property currently only affects the printed output.


@anchor{XREFlinelinestyle}
@prindex line linestyle
@item @code{linestyle}: @{@qcode{"-"}@} | @qcode{"--"} | @qcode{"-."} | @qcode{":"} | @qcode{"none"}
@xref{Line Styles}.


@anchor{XREFlinelinewidth}
@prindex line linewidth
@item @code{linewidth}: def. @code{0.50000}
Width of the line object measured in points.


@anchor{XREFlinemarker}
@prindex line marker
@item @code{marker}: @qcode{"*"} | @qcode{"+"} | @qcode{"."} | @qcode{"<"} | @qcode{">"} | @qcode{"^"} | @qcode{"d"} | @qcode{"diamond"} | @qcode{"h"} | @qcode{"hexagram"} | @{@qcode{"none"}@} | @qcode{"o"} | @qcode{"p"} | @qcode{"pentagram"} | @qcode{"s"} | @qcode{"square"} | @qcode{"v"} | @qcode{"x"}
Shape of the marker for each data point.  @xref{Marker Styles}.


@anchor{XREFlinemarkeredgecolor}
@prindex line markeredgecolor
@item @code{markeredgecolor}: @{@qcode{"auto"}@} | @qcode{"none"}
Color of the edge of the markers.  When set to @qcode{"auto"}, the marker edges have the same color as the line.  If set to @qcode{"none"}, no marker edges are displayed.  This property can also be set to any color.  @xref{Colors, , colorspec}.


@anchor{XREFlinemarkerfacecolor}
@prindex line markerfacecolor
@item @code{markerfacecolor}: @qcode{"auto"} | @{@qcode{"none"}@}
Color of the face of the markers.  When set to @qcode{"auto"}, the marker faces have the same color as the line.  If set to @qcode{"none"}, the marker faces are not displayed.  This property can also be set to any color.  @xref{Colors, , colorspec}.


@anchor{XREFlinemarkersize}
@prindex line markersize
@item @code{markersize}: scalar, def. @code{6}
Size of the markers measured in points.


@anchor{XREFlineparent}
@prindex line parent
@item @code{parent}: graphics handle
Handle of the parent graphics object.


@anchor{XREFlinepickableparts}
@prindex line pickableparts
@item @code{pickableparts}: @qcode{"all"} | @qcode{"none"} | @{@qcode{"visible"}@}
Specify whether line will accept mouse clicks.  By default, @code{pickableparts} is @qcode{"visible"} and only visible parts of the line or its children may react to mouse clicks.  When @code{pickableparts} is @qcode{"all"} both visible and invisible parts (or children) may react to mouse clicks.  When @code{pickableparts} is @qcode{"none"} mouse clicks on the object are ignored and transmitted to any objects underneath this one.  When an object is configured to accept mouse clicks the @qcode{"hittest"} property will determine how they are processed.  @xref{XREFlinehittest, , @w{hittest property}}.


@anchor{XREFlineselected}
@prindex line selected
@item @code{selected}: @{@qcode{"off"}@} | @qcode{"on"}



@anchor{XREFlineselectionhighlight}
@prindex line selectionhighlight
@item @code{selectionhighlight}: @qcode{"off"} | @{@qcode{"on"}@}



@anchor{XREFlinetag}
@prindex line tag
@item @code{tag}: string, def. @qcode{""}
A user-defined string to label the graphics object.


@anchor{XREFlinetype}
@prindex line type
@item @code{type} (read-only): string
Class name of the graphics object.  @code{type} is always @qcode{"line"}


@anchor{XREFlineuicontextmenu}
@prindex line uicontextmenu
@item @code{uicontextmenu}: graphics handle, def. @code{[](0x0)}
Graphics handle of the uicontextmenu object that is currently associated to this line object.


@anchor{XREFlineuserdata}
@prindex line userdata
@item @code{userdata}: Any Octave data, def. @code{[](0x0)}
User-defined data to associate with the graphics object.


@anchor{XREFlinevisible}
@prindex line visible
@item @code{visible}: @qcode{"off"} | @{@qcode{"on"}@}
If @code{visible} is @qcode{"off"}, the line is not rendered on screen.


@anchor{XREFlinexdata}
@prindex line xdata
@item @code{xdata}: vector, def. @code{[0   1]}
Vector of x data to be plotted.


@anchor{XREFlinexdatasource}
@prindex line xdatasource
@item @code{xdatasource}: string, def. @qcode{""}
Name of a vector in the current base workspace to use as x data.


@anchor{XREFlineydata}
@prindex line ydata
@item @code{ydata}: vector, def. @code{[0   1]}
Vector of y data to be plotted.


@anchor{XREFlineydatasource}
@prindex line ydatasource
@item @code{ydatasource}: string, def. @qcode{""}
Name of a vector in the current base workspace to use as y data.


@anchor{XREFlinezdata}
@prindex line zdata
@item @code{zdata}: vector, def. @code{[](0x0)}
Vector of z data to be plotted.


@anchor{XREFlinezdatasource}
@prindex line zdatasource
@item @code{zdatasource}: string, def. @qcode{""}
Name of a vector in the current base workspace to use as z data.

@end table