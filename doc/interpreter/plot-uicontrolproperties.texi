@c DO NOT EDIT!  Generated automatically by genpropdoc.m.

@c Copyright (C) 2014-2018 Pantxo Diribarne
@c
@c This file is part of Octave.
@c
@c Octave is free software: you can redistribute it and/or modify it
@c under the terms of the GNU General Public License as published by
@c the Free Software Foundation, either version 3 of the License, or
@c (at your option) any later version.
@c
@c Octave is distributed in the hope that it will be useful, but
@c WITHOUT ANY WARRANTY; without even the implied warranty of
@c MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
@c GNU General Public License for more details.
@c
@c You should have received a copy of the GNU General Public License
@c along with Octave; see the file COPYING.  If not, see
@c <https://www.gnu.org/licenses/>.

@table @asis

@anchor{XREFuicontrolbackgroundcolor}
@prindex uicontrol backgroundcolor
@item @code{backgroundcolor}: def. @code{[1   1   1]}



@anchor{XREFuicontrolbeingdeleted}
@prindex uicontrol beingdeleted
@item @code{beingdeleted}: @{@qcode{"off"}@} | @qcode{"on"}



@anchor{XREFuicontrolbusyaction}
@prindex uicontrol busyaction
@item @code{busyaction}: @qcode{"cancel"} | @{@qcode{"queue"}@}
Define how Octave handles the execution of this object's callback properties when it is unable to interrupt another object's executing callback.  This is only relevant when the currently executing callback object has its @code{interruptible} property set to @qcode{"off"}.  The @code{busyaction} property of the interrupting callback object indicates whether the interrupting callback is queued (@qcode{"queue"} (default)) or discarded (@qcode{"cancel"}).
@xref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFuicontrolbuttondownfcn}
@prindex uicontrol buttondownfcn
@item @code{buttondownfcn}: string | function handle, def. @code{[](0x0)}
For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFuicontrolcallback}
@prindex uicontrol callback
@item @code{callback}: def. @code{[](0x0)}



@anchor{XREFuicontrolcdata}
@prindex uicontrol cdata
@item @code{cdata}: def. @code{[](0x0)}



@anchor{XREFuicontrolchildren}
@prindex uicontrol children
@item @code{children} (read-only): vector of graphics handles, def. @code{[](0x1)}
Graphics handles of the uicontrol's children.


@anchor{XREFuicontrolclipping}
@prindex uicontrol clipping
@item @code{clipping}: @qcode{"off"} | @{@qcode{"on"}@}
If @code{clipping} is @qcode{"on"}, the uicontrol is clipped in its parent axes limits.


@anchor{XREFuicontrolcreatefcn}
@prindex uicontrol createfcn
@item @code{createfcn}: string | function handle, def. @code{[](0x0)}
Callback function executed immediately after uicontrol has been created.  Function is set by using default property on root object, e.g., @code{set (groot, "defaultuicontrolcreatefcn", 'disp ("uicontrol created!")')}.

For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFuicontroldeletefcn}
@prindex uicontrol deletefcn
@item @code{deletefcn}: string | function handle, def. @code{[](0x0)}
Callback function executed immediately before uicontrol is deleted.

For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFuicontrolenable}
@prindex uicontrol enable
@item @code{enable}: @qcode{"inactive"} | @qcode{"off"} | @{@qcode{"on"}@}



@anchor{XREFuicontrolextent}
@prindex uicontrol extent
@item @code{extent} (read-only): def. @code{[0   0   0   0]}



@anchor{XREFuicontrolfontangle}
@prindex uicontrol fontangle
@item @code{fontangle}: @qcode{"italic"} | @{@qcode{"normal"}@} | @qcode{"oblique"}
Control whether the font is italic or normal.


@anchor{XREFuicontrolfontname}
@prindex uicontrol fontname
@item @code{fontname}: string, def. @qcode{"*"}
Name of font used for text rendering.  When setting this property, the text rendering engine will search for a matching font in your system.  If none is found then text is rendered using a default sans serif font (same as the default @qcode{"*"} value).


@anchor{XREFuicontrolfontsize}
@prindex uicontrol fontsize
@item @code{fontsize}: scalar, def. @code{10}
Size of the font used for text rendering.  @xref{XREFuicontrolfontunits, , fontunits property}.


@anchor{XREFuicontrolfontunits}
@prindex uicontrol fontunits
@item @code{fontunits}: @qcode{"centimeters"} | @qcode{"inches"} | @qcode{"normalized"} | @qcode{"pixels"} | @{@qcode{"points"}@}
Units used to interpret the @qcode{"fontsize"} property.


@anchor{XREFuicontrolfontweight}
@prindex uicontrol fontweight
@item @code{fontweight}: @qcode{"bold"} | @qcode{"demi"} | @qcode{"light"} | @{@qcode{"normal"}@}
Control the variant of the base font used for text rendering.


@anchor{XREFuicontrolforegroundcolor}
@prindex uicontrol foregroundcolor
@item @code{foregroundcolor}: def. @code{[0   0   0]}



@anchor{XREFuicontrolhandlevisibility}
@prindex uicontrol handlevisibility
@item @code{handlevisibility}: @qcode{"callback"} | @qcode{"off"} | @{@qcode{"on"}@}
If @code{handlevisibility} is @qcode{"off"}, the uicontrol's handle is not visible in its parent's "children" property.


@anchor{XREFuicontrolhittest}
@prindex uicontrol hittest
@item @code{hittest}: @qcode{"off"} | @{@qcode{"on"}@}
Specify whether uicontrol processes mouse events or passes them to ancestors of the object.  When enabled, the object may respond to mouse clicks by evaluating the @qcode{"buttondownfcn"}, showing the uicontextmenu, and eventually becoming the root @qcode{"currentobject"}.  This property is only relevant when the object can accept mouse clicks which is determined by the @qcode{"pickableparts"} property.  @xref{XREFuicontrolpickableparts, , @w{pickableparts property}}.


@anchor{XREFuicontrolhorizontalalignment}
@prindex uicontrol horizontalalignment
@item @code{horizontalalignment}: @{@qcode{"center"}@} | @qcode{"left"} | @qcode{"right"}



@anchor{XREFuicontrolinterruptible}
@prindex uicontrol interruptible
@item @code{interruptible}: @qcode{"off"} | @{@qcode{"on"}@}
Specify whether this object's callback functions may be interrupted by other callbacks.  By default @code{interruptible} is @qcode{"on"} and callbacks that make use of @code{drawnow}, @code{figure}, @code{waitfor}, @code{getframe} or @code{pause} functions are eventually interrupted.
@xref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFuicontrolkeypressfcn}
@prindex uicontrol keypressfcn
@item @code{keypressfcn}: def. @code{[](0x0)}



@anchor{XREFuicontrollistboxtop}
@prindex uicontrol listboxtop
@item @code{listboxtop}: def. @code{1}



@anchor{XREFuicontrolmax}
@prindex uicontrol max
@item @code{max}: def. @code{1}



@anchor{XREFuicontrolmin}
@prindex uicontrol min
@item @code{min}: def. @code{0}



@anchor{XREFuicontrolparent}
@prindex uicontrol parent
@item @code{parent}: graphics handle
Handle of the parent graphics object.


@anchor{XREFuicontrolpickableparts}
@prindex uicontrol pickableparts
@item @code{pickableparts}: @qcode{"all"} | @qcode{"none"} | @{@qcode{"visible"}@}
Specify whether uicontrol will accept mouse clicks.  By default, @code{pickableparts} is @qcode{"visible"} and only visible parts of the uicontrol or its children may react to mouse clicks.  When @code{pickableparts} is @qcode{"all"} both visible and invisible parts (or children) may react to mouse clicks.  When @code{pickableparts} is @qcode{"none"} mouse clicks on the object are ignored and transmitted to any objects underneath this one.  When an object is configured to accept mouse clicks the @qcode{"hittest"} property will determine how they are processed.  @xref{XREFuicontrolhittest, , @w{hittest property}}.


@anchor{XREFuicontrolposition}
@prindex uicontrol position
@item @code{position}: def. @code{[0    0   80   30]}



@anchor{XREFuicontrolselected}
@prindex uicontrol selected
@item @code{selected}: @{@qcode{"off"}@} | @qcode{"on"}



@anchor{XREFuicontrolselectionhighlight}
@prindex uicontrol selectionhighlight
@item @code{selectionhighlight}: @qcode{"off"} | @{@qcode{"on"}@}



@anchor{XREFuicontrolsliderstep}
@prindex uicontrol sliderstep
@item @code{sliderstep}: def. @code{[0.010000   0.100000]}



@anchor{XREFuicontrolstring}
@prindex uicontrol string
@item @code{string}: def. @qcode{""}



@anchor{XREFuicontrolstyle}
@prindex uicontrol style
@item @code{style}: @qcode{"checkbox"} | @qcode{"edit"} | @qcode{"frame"} | @qcode{"listbox"} | @qcode{"popupmenu"} | @{@qcode{"pushbutton"}@} | @qcode{"radiobutton"} | @qcode{"slider"} | @qcode{"text"} | @qcode{"togglebutton"}



@anchor{XREFuicontroltag}
@prindex uicontrol tag
@item @code{tag}: string, def. @qcode{""}
A user-defined string to label the graphics object.


@anchor{XREFuicontroltooltipstring}
@prindex uicontrol tooltipstring
@item @code{tooltipstring}: def. @qcode{""}



@anchor{XREFuicontroltype}
@prindex uicontrol type
@item @code{type} (read-only): string
Class name of the graphics object.  @code{type} is always @qcode{"uicontrol"}


@anchor{XREFuicontroluicontextmenu}
@prindex uicontrol uicontextmenu
@item @code{uicontextmenu}: graphics handle, def. @code{[](0x0)}
Graphics handle of the uicontextmenu object that is currently associated to this uicontrol object.


@anchor{XREFuicontrolunits}
@prindex uicontrol units
@item @code{units}: @qcode{"centimeters"} | @qcode{"characters"} | @qcode{"inches"} | @qcode{"normalized"} | @{@qcode{"pixels"}@} | @qcode{"points"}



@anchor{XREFuicontroluserdata}
@prindex uicontrol userdata
@item @code{userdata}: Any Octave data, def. @code{[](0x0)}
User-defined data to associate with the graphics object.


@anchor{XREFuicontrolvalue}
@prindex uicontrol value
@item @code{value}: def. @code{0}



@anchor{XREFuicontrolverticalalignment}
@prindex uicontrol verticalalignment
@item @code{verticalalignment}: @qcode{"bottom"} | @{@qcode{"middle"}@} | @qcode{"top"}



@anchor{XREFuicontrolvisible}
@prindex uicontrol visible
@item @code{visible}: @qcode{"off"} | @{@qcode{"on"}@}
If @code{visible} is @qcode{"off"}, the uicontrol is not rendered on screen.

@end table